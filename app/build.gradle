/*
 * MIT License
 *
 * Copyright (c) 2017 Maia Grotepass
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

apply plugin: 'com.android.application'
apply plugin: 'realm-android'

if (project.hasProperty("AB.signing")
        && new File(project.property("AB.signing") + ".gradle").exists()) {
    apply from: project.property("AB.signing") + ".gradle";
}

android {
    compileSdkVersion sdkVersion
    buildToolsVersion buildTools
    defaultConfig {
        applicationId "com.afrikaburn.app"
        minSdkVersion minSdk
        targetSdkVersion sdkVersion
        versionCode 2
        versionName "0.0.2"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        buildConfigField 'String', 'DATA_URL', '"https://new.afrikaburn.com/api/general"'
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    dataBinding {
        enabled = true
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile project(':android-gmaps-addons')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    //Support lib dependencies
    compile "com.android.support:appcompat-v7:${supportLibraryVersion}"
    compile "com.android.support:recyclerview-v7:${supportLibraryVersion}"
    compile "com.android.support:design:${supportLibraryVersion}"
    compile "com.android.support:support-vector-drawable:${supportLibraryVersion}"
    compile 'com.android.support.constraint:constraint-layout:1.0.1'

    //Play Services and firebase dependencies
    compile "com.google.android.gms:play-services-gcm:${playServicesVersion}"
    compile "com.google.android.gms:play-services-maps:${playServicesVersion}"
    compile "com.google.firebase:firebase-crash:${firebaseVersion}"

    //Realm dependencies
    compile "io.realm:android-adapters:${realmAdapterVersion}"
    annotationProcessor 'dk.ilios:realmfieldnameshelper:1.1.1'
    compile 'com.facebook.stetho:stetho:1.4.2'
    compile 'com.uphyca:stetho_realm:2.0.0'

    //Other dependencies
    compile('com.opencsv:opencsv:3.9') {
        exclude group: 'commons-logging', module: 'commons-logging'
    }

    //Test dependencies
    testCompile 'junit:junit:4.12'
}

apply plugin: 'com.google.gms.google-services'